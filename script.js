const instructionsDiv=document.getElementById('instructions');const hiddenCardsContainer=document.getElementById('hidden-cards');const cardResponsiveRow1=document.getElementById('cardResponsiveRow1');const cardResponsiveRow2=document.getElementById('cardResponsiveRow2');const visibleCardsContainer=document.getElementById('visible-cards');const targetDisplay=document.getElementById('target-number');const timerDisplay=document.getElementById('timer');const checkBtn=document.getElementById('check');const resetBtn=document.getElementById('reset');const messageDisplay=document.getElementById('message');const expressionInput=document.getElementById('expression');let selectedHidden=[];let targetNumber=null;let timer=60;let interval;let usedNumbers=new Set();const sounds={flip:new Audio('flip.mp3'),correct:new Audio('correct.mp3'),incorrect:new Audio('incorrect.mp3'),timeUp:new Audio('timeup.mp3')};function pushNumber(card){expressionInput.value+=card.dataset.value;usedNumbers.add(card);card.classList.add('disabled')}
function barajarDe0a10(){let array=[...Array(10).keys()];for(let i=array.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[array[i],array[j]]=[array[j],array[i]]}
return array}
function createHiddenCards(){cardResponsiveRow1.innerHTML='';cardResponsiveRow2.innerHTML='';const numbers=barajarDe0a10();numbers.forEach(num=>{const card=document.createElement('div');card.className='card hidden';card.textContent=num;card.dataset.value=num;card.addEventListener('click',()=>{if(selectedHidden.length<2&&!card.classList.contains('revealed')){card.classList.remove('hidden');card.classList.add('revealed');card.style.color='gray';selectedHidden.push(Number(card.dataset.value));sounds.flip.play();if(selectedHidden.length===2){targetNumber=selectedHidden[0]*10+selectedHidden[1];targetDisplay.textContent=`NÃºmero objetivo: ${targetNumber}`;startTimer()}}});if(cardResponsiveRow1.childElementCount==cardResponsiveRow2.childElementCount)
cardResponsiveRow1.appendChild(card);else cardResponsiveRow2.appendChild(card)});hiddenCardsContainer.appendChild(cardResponsiveRow1)}
function startTimer(){clearInterval(interval);timer=60;updateTimerStyle();interval=setInterval(()=>{timer--;timerDisplay.textContent=`Tiempo: ${timer}`;updateTimerStyle();if(timer<=0){clearInterval(interval);messageDisplay.textContent='Â¡Tiempo agotado!';sounds.timeUp.play()}},1000)}
function updateTimerStyle(){if(timer<=20){timerDisplay.style.backgroundColor='red';timerDisplay.style.color='white'}else if(timer<=40){timerDisplay.style.backgroundColor='yellow';timerDisplay.style.color='black'}else{timerDisplay.style.backgroundColor='green'}}
document.querySelectorAll('.operator').forEach(btn=>{btn.addEventListener('click',()=>{expressionInput.value+=btn.dataset.op;btn.classList.add('disabled')})});instructionsDiv.addEventListener('click',()=>{if(instructionsDiv.querySelector('ul').style.display==='none'||instructionsDiv.querySelector('ul').style.display===''){document.getElementById('span1F783').setAttribute('hidden','hidden');instructionsDiv.querySelector('ul').setAttribute('style','display:inline')}else{document.getElementById('span1F783').removeAttribute('hidden');instructionsDiv.querySelector('ul').setAttribute('style','display:none')}})
checkBtn.addEventListener('click',()=>{const expr=expressionInput.value;try{if(!/^.*\*.*\+.*-.*$/.test(expr)){messageDisplay.textContent='Debes usar los operadores en orden: x + -';return}
if(/(^|[^0-9])1\*|(\*)1([^0-9]|$)/.test(expr)){messageDisplay.textContent='ðŸš« No se permite multiplicar directamente por 1. Usa otros nÃºmeros.';messageDisplay.className='message-box incorrect';sounds.incorrect.play();setTimeout(()=>{messageDisplay.textContent='';messageDisplay.className='message-box'},3000);return}
const result=eval(expr);if(result===targetNumber){messageDisplay.textContent='Â¡Correcto!';sounds.correct.play();clearInterval(interval);confetti({particleCount:150,spread:70,origin:{y:0.6}});const winMessage=document.createElement('div');winMessage.textContent='Â¡Ganaste!';winMessage.classList.add('win-message');document.body.appendChild(winMessage);setTimeout(()=>{winMessage.style.opacity=0;setTimeout(()=>winMessage.remove(),500)},3000)}else{messageDisplay.textContent='Incorrecto, intenta de nuevo.';sounds.incorrect.play()}}catch{messageDisplay.textContent='ExpresiÃ³n invÃ¡lida.'}});resetBtn.addEventListener('click',()=>{clearInterval(interval);timer=60;timerDisplay.textContent=`Tiempo: ${timer}`;updateTimerStyle()
const visibleCards=document.querySelectorAll(".card, .disabled");Array.prototype.forEach.call(visibleCards,function(vc){vc.classList.remove("disabled");vc.classList.add('visible')});expressionInput.value='';messageDisplay.textContent='';targetDisplay.textContent='';selectedHidden=[];targetNumber=null;usedNumbers.clear();document.querySelectorAll('.operator').forEach(op=>op.classList.remove('disabled'));createHiddenCards();createVisibleCards()});expressionInput.addEventListener('input',()=>{const expr=expressionInput.value;usedNumbers.clear();document.querySelectorAll('#visible-cards .card').forEach(card=>{card.classList.remove('disabled')});document.querySelectorAll('.operator').forEach(op=>{op.classList.remove('disabled')});for(let i=1;i<=9;i++){if(expr.includes(i.toString())){usedNumbers.add(i);const card=document.querySelector(`#visible-cards .card[data-value="${i}"]`);card?.classList.add('disabled')}}
const operators=['x','+','-'];operators.forEach(op=>{if(expr.includes(op)){const button=document.querySelector(`.operator[data-op="${op}"]`);button?.classList.add('disabled')}})});createHiddenCards()